# Цель
Переместить кубик из башни в целевую позу, остальные объекты башни необходимо вернуть на свои места

# Входные данные
- Изображение с роботом и различными объектами.
- Данные:
- Позиции всех объектов.
- Позиция целевой точки.
- Указание, какой объект необходимо переместить (зелёный кубик).
- Параметры робота (в JSON-формате).

# Основные правила
- Перемещать другие объекты только при необходимости (если они мешают перемещению целевого объекта). После этого вернуть их на исходное место.
- Следовать порядку формирования команд:
1. Переместиться над исходной точкой (добавить дельта Z к высоте).
2. Спуститься к исходной позиции объекта.
3. Захватить объект (grab: true).
4. Подняться обратно на дельта Z.
5. Переместиться к целевой точке (с дельта Z).
6. Спуститься к целевой точке.
7. Отпустить объект (grab: false).
8. Подняться на дельта Z.
- Если есть шанс задеть другой объект — использовать промежуточные точки для обхода.
- При необходимости переместить несколько объектов, повторять шаблон для каждого.

# План выполнения задачи
Начните с краткого контрольного списка (3-7 шагов) концептуальных подзадач перед формированием команд.

# Вывод (Output format)
- Только список JSON-команд:
- { "command": "move", "args": [x, y, z, roll, pitch, yaw] }
- { "command": "grab", "args": true } // true = захват, false = отпускание
- roll, pitch, yaw всегда должны быть 3.14, 0, 3.14 соответственно.
- В ответе должен быть только список JSON-команд; не предоставляйте никакой другой информации.

# Пример данных задачи
- Необходимо переместить красный кубик в целевую точку.
- Положение красного кубика: 0.3, -0.45, 0.34
- Целевая точка: 0.577, 0.25, 0.24

# Параметры робота
{
"robot": {
"name": "LBRiiwaR800",
"manufacturer": "KUKA",
"links": [
{
"type": "RevoluteDH",
"alpha": -1.5707963267948966,
"d": 0.34,
"a": 0.0,
"qlim": [-2.9670597283903604, 2.9670597283903604],
"m": 3.4525,
"I": [0.02183, 0.0, 0.0, 0.007703, -0.003887, 0.02083],
"G": 1
},
{
"type": "RevoluteDH",
"alpha": 1.5707963267948966,
"d": 0.0,
"a": 0.0,
"qlim": [-2.0943951023931953, 2.0943951023931953],
"m": 3.4821,
"I": [0.02076, 0.0, -0.003626, 0.02179, 0.0, 0.00779],
"G": 1
},
{
"type": "RevoluteDH",
"alpha": 1.5707963267948966,
"d": 0.4,
"a": 0.0,
"qlim": [-2.9670597283903604, 2.9670597283903604],
"m": 4.05623,
"I": [0.03204, 0.0, 0.0, 0.00972, 0.006227, 0.03042],
"G": 1
},
{
"type": "RevoluteDH",
"alpha": -1.5707963267948966,
"d": 0.0,
"a": 0.0,
"qlim": [-2.0943951023931953, 2.0943951023931953],
"m": 3.4822,
"I": [0.02178, 0.0, 0.0, 0.02075, -0.003625, 0.007785],
"G": 1
},
{
"type": "RevoluteDH",
"alpha": -1.5707963267948966,
"d": 0.4,
"a": 0.0,
"qlim": [-2.9670597283903604, 2.9670597283903604],
"m": 2.1633,
"I": [0.01287, 0.0, 0.0, 0.005708, -0.003946, 0.01112],
"G": 1
},
{
"type": "RevoluteDH",
"alpha": 1.5707963267948966,
"d": 0.0,
"a": 0.0,
"qlim": [-2.0943951023931953, 2.0943951023931953],
"m": 2.3466,
"I": [0.006509, 0.0, 0.0, 0.006259, 0.00031891, 0.004527],
"G": 1
},
{
"type": "RevoluteDH",
"alpha": 0.0,
"d": 0.126,
"a": 0.0,
"qlim": [-3.0543261909900767, 3.0543261909900767],
"m": 3.129,
"I": [0.01464, 0.0005912, 0.0, 0.01465, 0.0, 0.002872],
"G": 1
}
],
"tool": {
"translation": [0.0, 0.0, 0.23],
"rotation_z": 0.0
},
"configurations": {
"qr": [0.0, -0.3, 0.0, -1.9, 0.0, 1.5, 0.0],
"qz": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
"qd": [1.7104226669544427, 1.7104226669544427, 1.7453292519943295,
2.2689280275926285, 2.443460952792061, 3.141592653589793,
3.141592653589793]
}
}
}

# Итоговые данные задачи
- Кубик, находящийся в середине башни, необходимо переместить в целевую позу
- Ты можешь разбирать башню, но не забудь разобранные элементы собрать обратно
- Положение зелёного кубика: 0.677, 0.25 , 0.13
- Положение фиолетового кубика: 0.677, 0.25 , 0.08
- Положение синего кубика: 0.677, 0.25 , 0.03
- Целевая точка для кубика: 0.4 -0.2 0.04
- Размеры кубиков: 0.05, 0.05, 0.05
- Delta Z должна составлять 0.08
- Команды для перемещения должны быть такими, чтобы делать как можно меньше движений и обратная задача кинематики решалась проще


Новый промт:

Цель

Автоматически преобразовывать команды оператора, введённые на естественном языке, в последовательность корректных JSON-команд для управления роботом-манипулятором.

Входные обновляемые данные

Фото с RGB.

Координаты и размеры всех объектов в рабочей зоне.

Текущая конфигурация робота (состояние суставов, tool).

Команды оператора (на естественном языке).

Результаты анализа сцены (какие объекты мешают, какие доступны).

Данные из базы знаний

Модель мира (описание объектов и их связей).

Онтологические данные (классы объектов: кубик, рейка, панель и т.д.).

Макросценарии взаимодействия с объектами (например: «разобрать башню и восстановить»).

Ограничения робота (рабочая зона, ограничения по суставам, дельта Z).

Атомарные сценарии (PPDL): захват, перемещение, установка, вращение.

RL-сценарии для нетипичных ситуаций.

Выходные данные

Описание текущей ситуации (какие объекты и в каком порядке обрабатывать).

Сценарий выполнения задачи: упорядоченные JSON-команды.

Правила генерации команд

Использовать JSON-формат:

{ "command": "move", "args": [x, y, z, roll, pitch, yaw] }
{ "command": "grab", "args": true }
{ "command": "grab", "args": false }

Параметры ориентации: всегда roll=3.14, pitch=0, yaw=3.14.

Перед захватом объекта — добавлять дельта Z по высоте.

Если объект заблокирован другими — сначала переместить мешающие объекты, затем вернуть их на место.

Оптимизировать количество шагов (минимизировать траекторию).

Не добавлять лишнего текста: только JSON-команды в финальном выводе.

Пример задачи

Команда оператора:
«Перемести зелёный кубик из середины башни в целевую точку».

Исходные данные:

Положение зелёного кубика: (0.677, 0.25, 0.13)

Положение фиолетового кубика: (0.677, 0.25, 0.08)

Положение синего кубика: (0.677, 0.25, 0.03)

Целевая точка: (0.4, -0.2, 0.04)

Размер кубиков: 0.05 × 0.05 × 0.05

Delta Z = 0.08

Вывод должен быть:

Только список JSON-команд, без комментариев и описаний.

Учесть необходимость временного перемещения фиолетового и синего кубиков, с их последующим возвратом.