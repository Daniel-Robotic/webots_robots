#VRML_SIM R2023b utf8
# license: Apache License 2.0
# license url: https://www.apache.org/licenses/LICENSE-2.0
# documentation url: https://webots.cloud/run?version=R2023b&url=https%3A%2F%2Fgithub.com%2FDaniel-Robotic%2Fwebots_robots%2Fblob%2Fmain%2Fprotos%2FManufactoringFloor.proto
# keywords: primitive/ground
# A manufactoring floor
# template language: javascript

EXTERNPROTO "../protos/FloorTexture.proto"

PROTO ManufactoringFloor [
  field SFVec3f translation 0 0 0
  field SFRotation rotation 0 0 1 0
  field SFString name "ManufactoringFloor"
  field SFString contactMaterial "default" # Is `Solid.contactMaterial`.
  field SFVec2f size 5 5 # Defines the size of the floor.
  field SFVec2f tileSize 1 1 # Defines the size of texture used for the floor.
  field SFNode appearance FloorTexture { type "brick" } # Defines the appearance of the floor.
]
{
  Solid {

    %<
      let size = fields.size.value;
      if (size.x <= 0.0 || size.y <= 0.0) {
        size = fields.size.defaultValue;
        console.error('\'size\' must contain positive values. Value reset to (' + size.x + ', ' + size.y + ').');
      }

      let tileSize = fields.tileSize.value;
      if (tileSize.x <= 0 || tileSize.y <= 0) { // avoid a zero division and negative values
        tileSize = fields.tileSize.defaultValue;
        console.error('\'size\' must contain positive values. Value reset to (' + tileSize.x + ', ' + tileSize.y + ').');
      }
      let textureScale = {x: size.x / tileSize.x, y: size.y / tileSize.y};
    >%

    children [
      Shape {
        appearance IS appearance
        geometry IndexedFaceSet {
          coord Coordinate {
            point [
              %<= -(size.x * 0.5) >% %<= -(size.y * 0.5) >% 0
              %<= size.x * 0.5 >% %<= -(size.y * 0.5) >% 0
              %<= -(size.x * 0.5) >% %<= size.y * 0.5 >% 0
              %<= size.x * 0.5 >% %<= size.y * 0.5 >% 0
            ]
          }
          texCoord TextureCoordinate {
            point [
              0 0
              %<= textureScale.x >% 0
              0 %<= textureScale.y >%
              %<= textureScale.x >% %<= textureScale.y >%
            ]
          }
          coordIndex [2 0 1 3 -1]
          texCoordIndex [2 0 1 3 -1]
        }
      }
    ]
    name IS name
    boundingObject Plane {
      size IS size
    }
    contactMaterial IS contactMaterial
    locked TRUE

  }
}
